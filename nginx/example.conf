# Generated by tool.fit
# https://tool.fit/nginx welcome to use
########### 每个指令必须有分号结束。#################
#user administrator administrators;  #配置用户或者组，默认为nobody nobody。
#worker_processes auto;  #允许生成的进程数
#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址
error_log logs/error.log debug; #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
events {
    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on
    multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off
    #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    worker_connections  1024;    #最大连接数，默认为512
}
http {
    #access_log off; #取消服务日志
    include mime.types; #文件扩展名与文件类型映射表
    default_type application/octet-stream; #默认文件类型，默认为text/plain
    log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义格式
    access_log logs/access.log myFormat; #combined为日志格式的默认值
    sendfile on; #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    sendfile_max_chunk 100k; #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    keepalive_timeout 65; #连接超时时间，默认为75s，可以在http，server，location块。
    error_page 404 https://tool.fit; #错误页
    limit_req_zone $binary_remote_addr zone=one:10m rate=160r/m; 
    limit_req zone=one burst=30 nodelay; 
    gzip on; 
    gzip_min_length 1k; 
    gzip_buffers 4 16k; 
    gzip_http_version 1.1; 
    gzip_comp_level 9; 
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/javascript application/json; 
    gzip_disable "MSIE [1-6]."; 
    gzip_vary on; 
    upstream http_balance {
        ip_hash; 
        server 127.0.0.1:8000 weight=100 fail_timeout=60 max_fails=3; 
        server 192.168.10.121:3333 down; #停止
    }
    server {
        server_name tool.fit; 
        listen 80 default; 
        location ^~ /static/ {
            #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。
            root /www/root/static; #根目录
        }
        location ~* /proxy$ {
            #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。
            proxy_pass http://http_balance; #请求转向http_balance 定义的服务器列表
            proxy_set_header Host $host; 
            proxy_set_header X-Real-IP $remote_addr; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
            proxy_set_header X-Forwarded-Host $http_host; 
            proxy_set_header X-Forwarded-Port $server_port; 
            proxy_set_header X-Forwarded-Proto $scheme; 
        }
        location / {
            proxy_pass http://127.0.0.1:8000; 
        }

    }
    server {
        keepalive_requests 120; #单连接请求上限次数。
        listen 8081; #监听端口
        server_name 127.0.0.1; #监听地址
        location / {
            proxy_pass http://127.0.0.1:8080; 
        }

    }
}
